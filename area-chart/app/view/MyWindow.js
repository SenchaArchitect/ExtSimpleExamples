/*
 * File: app/view/MyWindow.js
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyWindow', {
    extend: 'Ext.window.Window',
    alias: 'widget.mywindow',

    autoShow: true,
    height: 600,
    width: 800,
    layout: {
        type: 'fit'
    },
    title: 'Area Chart',
    maximizable: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'button',
                            text: 'Reload Data',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            enableToggle: true,
                            pressed: true,
                            text: 'Animate',
                            listeners: {
                                toggle: {
                                    fn: me.onButtonToggle,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'chart',
                    height: 250,
                    itemId: 'chart',
                    width: 400,
                    animate: true,
                    insetPadding: 20,
                    store: 'MyStore',
                    axes: [
                        {
                            type: 'Numeric',
                            grid: {
                                odd: {
                                    opacity: 1,
                                    fill: '#ddd',
                                    stroke: '#bbb',
                                    'stroke-width': 1
                                }
                            },
                            position: 'left',
                            title: 'Numeric Axis',
                            fields: [
                                'data1',
                                'data2',
                                'data3',
                                'data4',
                                'data5',
                                'data6',
                                'data7'
                            ],
                            minimum: 0
                        },
                        {
                            type: 'Category',
                            grid: true,
                            title: 'Month of the Year',
                            fields: [
                                'name'
                            ],
                            label: {
                                rotate: {
                                    degrees: 315
                                }
                            },
                            position: 'bottom'
                        }
                    ],
                    series: [
                        {
                            type: 'area',
                            xField: 'name',
                            yField: [
                                'data1',
                                'data2',
                                'data3',
                                'data4',
                                'data5',
                                'data6',
                                'data7'
                            ]
                        }
                    ]
                }
            ],
            listeners: {
                afterrender: {
                    fn: me.onWindowAfterRender,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        this.refreshData();
    },

    onButtonToggle: function(button, pressed, eOpts) {
        var chart = this.child('chart');
        chart.animate = pressed ? {easing: 'ease', duration: 500} : false;
    },

    onWindowAfterRender: function(component, eOpts) {
        this.refreshData();
    },

    refreshData: function() {
        var data = [],
            floor = 20,
            n = 12,
            i;

        for (i = 0; i < n; i++) {
            data.push({
                name: Ext.Date.monthNames[i % 12],
                data1: Math.floor(Math.max((Math.random() * 100), floor)),
                data2: Math.floor(Math.max((Math.random() * 100), floor)),
                data3: Math.floor(Math.max((Math.random() * 100), floor)),
                data4: Math.floor(Math.max((Math.random() * 100), floor)),
                data5: Math.floor(Math.max((Math.random() * 100), floor)),
                data6: Math.floor(Math.max((Math.random() * 100), floor)),
                data7: Math.floor(Math.max((Math.random() * 100), floor)),
                data8: Math.floor(Math.max((Math.random() * 100), floor)),
                data9: Math.floor(Math.max((Math.random() * 100), floor))
            });
        }

        this.child('chart').store.loadData(data);

    }

});